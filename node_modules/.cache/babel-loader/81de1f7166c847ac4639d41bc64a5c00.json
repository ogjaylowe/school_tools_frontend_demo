{"ast":null,"code":"var _jsxFileName = \"/Users/jaylowe/Projects/Orion/orion_web_tools_demo/React Frontend/src/components/AdminView.js\";\nimport React from 'react';\nimport configValues from '../config.js';\nimport TableR from './TableR.js';\nimport TableComponent from './TableComponent.js';\nimport HomeworkClub from './HomeworkClub.js';\nimport CollectionForm from './CollectionForm.js';\nimport DescriptionText from './DescriptionText.js';\nimport Selector from './Selector.js';\nimport CallbackButton from './CallbackButton.js';\nimport HomebridingTable from './HomebridingTable.js';\nimport DatePicker from './DatePicker.js';\nimport LoginMenu from './LoginMenu.js';\nimport ParentView from \"./ParentView.js\";\nimport Nav from \"./Nav.js\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\"; //// **** INITIALIZATIONS **** ////\n// sets up the uniqid hashing function for use with component id's\n\nvar uniqid = require('uniqid'); // reference values from config.js\n\n\nvar students = configValues.students;\nvar times = configValues.times;\nvar classes = configValues.classes;\nvar periods = configValues.periods; // headers for each type of table\n\nvar hwcHeaders = configValues.homeworkClubHeaders;\nvar detentionHeaders = [];\n\nfunction getFormattedDate(date) {\n  var year = date.getFullYear();\n  var month = (1 + date.getMonth()).toString();\n  month = month.length > 1 ? month : '0' + month;\n  var day = date.getDate().toString();\n  day = day.length > 1 ? day : '0' + day;\n  return month + '/' + day + '/' + year;\n}\n\nclass AdminView extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      homeworkEntries: [],\n      detentionEntries: [],\n      dueDate: \"\",\n      descriptionText: \"\"\n    };\n  }\n\n  // TODO: use componentDidMount to collect and populate all current homwework club/detention table entries\n  componentDidMount() {\n    // TODO: add the fetch command here in conjunction with setState!\n    this.setState({\n      dueDate: getFormattedDate(new Date())\n    });\n  }\n\n  onClickAddHomeworkCard() {\n    // TODO: refactor these uncontrolled components\n    var qstudentName = document.querySelector('#studentNames').value;\n    var qclassSection = document.querySelector('#classSection').value;\n    var qReferenceIndex = uniqid();\n    this.setState(prevState => ({\n      homeworkEntries: [...prevState.homeworkEntries, React.createElement(TableComponent, {\n        id: uniqid(),\n        referenceIndex: qReferenceIndex,\n        studentName: qstudentName,\n        selectorValue: qclassSection,\n        description: this.state.descriptionText,\n        dueDate: this.state.dueDate,\n        callbackRef: event => this.onClickRemoveCard(event),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      })]\n    }));\n  }\n\n  onClickRemoveCard(event) {\n    this.setState({\n      homeworkEntries: this.state.homeworkEntries.filter(function (entry) {\n        return entry.props.referenceIndex !== event.target.id;\n      })\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/detentioncenter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Large design changes in progress, please use homework club and homebriding for now.\")), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/homeworkclub\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(CollectionForm, {\n      collectionLegend: \"Homework Club\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(Selector, {\n      configObjectValue: \"studentNames\",\n      arrayToMap: students,\n      labelText: \"Select a student: \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(Selector, {\n      configObjectValue: \"classSection\",\n      arrayToMap: classes,\n      labelText: \"Class of assignment: \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(Selector, {\n      configObjectValue: \"classPeriod\",\n      arrayToMap: classes,\n      labelText: \"Class of assignment: \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(DescriptionText, {\n      callbackFunction: () => this.setState({\n        descriptionText: document.querySelector('#descriptionText').value\n      }),\n      passedStateValue: this.state.descriptionText,\n      descriptionPlaceholder: \"Description of assignment\",\n      passedId: \"descriptionText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(DatePicker, {\n      callbackFunction: () => this.setState({\n        dueDate: document.querySelector('#date').value\n      }),\n      passedStateValue: this.state.dueDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(CallbackButton, {\n      callbackFunction: () => this.onClickAddHomeworkCard(),\n      buttonDisplayValue: \"Add Student\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    })), React.createElement(TableR, {\n      entries: this.state.homeworkEntries,\n      tableHeaders: hwcHeaders,\n      tableLegend: \"Homework Club Entries\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }))), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/homebriding\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(CollectionForm, {\n      collectionLegend: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(HomebridingTable, {\n      students: students,\n      tableLegend: \"Homebriding 2020\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    })))), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/supporttickets\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Coming soon!\"))), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/guides\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"Coming soon!\"))), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/procedures\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"Coming soon!\")))));\n  }\n\n}\n\nexport default AdminView;","map":{"version":3,"sources":["/Users/jaylowe/Projects/Orion/orion_web_tools_demo/React Frontend/src/components/AdminView.js"],"names":["React","configValues","TableR","TableComponent","HomeworkClub","CollectionForm","DescriptionText","Selector","CallbackButton","HomebridingTable","DatePicker","LoginMenu","ParentView","Nav","BrowserRouter","Router","Switch","Route","Link","uniqid","require","students","times","classes","periods","hwcHeaders","homeworkClubHeaders","detentionHeaders","getFormattedDate","date","year","getFullYear","month","getMonth","toString","length","day","getDate","AdminView","Component","state","homeworkEntries","detentionEntries","dueDate","descriptionText","componentDidMount","setState","Date","onClickAddHomeworkCard","qstudentName","document","querySelector","value","qclassSection","qReferenceIndex","prevState","event","onClickRemoveCard","filter","entry","props","referenceIndex","target","id","render"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport configValues from '../config.js';\n\nimport TableR from './TableR.js';\nimport TableComponent from './TableComponent.js';\n\nimport HomeworkClub from './HomeworkClub.js';\n\nimport CollectionForm from './CollectionForm.js';\nimport DescriptionText from './DescriptionText.js';\nimport Selector from './Selector.js';\nimport CallbackButton from './CallbackButton.js';\nimport HomebridingTable from './HomebridingTable.js';\nimport DatePicker from './DatePicker.js';\nimport LoginMenu from './LoginMenu.js';\nimport ParentView from \"./ParentView.js\";\nimport Nav from \"./Nav.js\";\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\n\n//// **** INITIALIZATIONS **** ////\n// sets up the uniqid hashing function for use with component id's\nvar uniqid = require('uniqid');\n\n// reference values from config.js\nvar students = configValues.students\nvar times = configValues.times\nvar classes = configValues.classes\nvar periods = configValues.periods\n\n// headers for each type of table\nvar hwcHeaders = configValues.homeworkClubHeaders\nvar detentionHeaders = []\n\n\nfunction getFormattedDate(date) {\n    var year = date.getFullYear();\n\n    var month = (1 + date.getMonth()).toString();\n    month = month.length > 1 ? month : '0' + month;\n\n    var day = date.getDate().toString();\n    day = day.length > 1 ? day : '0' + day;\n\n    return month + '/' + day + '/' + year;\n}\n\nclass AdminView extends React.Component {\n    state = {\n        homeworkEntries: [],\n        detentionEntries: [],\n        dueDate: \"\",\n        descriptionText: \"\",\n    }\n\n    // TODO: use componentDidMount to collect and populate all current homwework club/detention table entries\n    componentDidMount() {\n        // TODO: add the fetch command here in conjunction with setState!\n\n        this.setState({\n            dueDate: getFormattedDate(new Date())\n        })\n    }\n\n    onClickAddHomeworkCard() {\n        // TODO: refactor these uncontrolled components\n        var qstudentName = document.querySelector('#studentNames').value\n        var qclassSection = document.querySelector('#classSection').value\n\n        var qReferenceIndex = uniqid()\n\n        this.setState(prevState => ({\n            homeworkEntries: [...prevState.homeworkEntries,\n            <TableComponent\n                id={uniqid()}\n                referenceIndex={qReferenceIndex}\n                studentName={qstudentName}\n                selectorValue={qclassSection}\n                description={this.state.descriptionText}\n                dueDate={this.state.dueDate}\n                callbackRef={(event) => this.onClickRemoveCard(event)}\n            />\n            ]\n        }))\n    }\n\n    onClickRemoveCard(event) {\n        this.setState(\n            {\n                homeworkEntries: this.state.homeworkEntries.filter(function (entry) {\n                    return entry.props.referenceIndex !== event.target.id\n                })\n            }\n        );\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n\n                <Router>\n\n                    <Nav />\n\n                    <Switch>\n                        <Route path=\"/detentioncenter\">\n                            Large design changes in progress, please use homework club and homebriding for now.\n                        </Route>\n                    </Switch>\n\n                    <Switch>\n                        <Route path=\"/homeworkclub\">\n                            <CollectionForm collectionLegend={\"Homework Club\"}>\n                                <Selector\n                                    configObjectValue=\"studentNames\"\n                                    arrayToMap={students}\n                                    labelText=\"Select a student: \"\n                                />\n                                <Selector configObjectValue=\"classSection\" arrayToMap={classes} labelText=\"Class of assignment: \" />\n                                <Selector configObjectValue=\"classPeriod\" arrayToMap={classes} labelText=\"Class of assignment: \" />\n                                <DescriptionText\n                                    callbackFunction={() => this.setState({ descriptionText: document.querySelector('#descriptionText').value })}\n                                    passedStateValue={this.state.descriptionText}\n                                    descriptionPlaceholder={\"Description of assignment\"}\n                                    passedId=\"descriptionText\"\n                                />\n                                <DatePicker\n                                    callbackFunction={() => this.setState({ dueDate: document.querySelector('#date').value })}\n                                    passedStateValue={this.state.dueDate}\n                                />\n                                <CallbackButton callbackFunction={() => this.onClickAddHomeworkCard()} buttonDisplayValue=\"Add Student\" />\n                            </CollectionForm>\n\n                            <TableR entries={this.state.homeworkEntries} tableHeaders={hwcHeaders} tableLegend=\"Homework Club Entries\" />\n                        </Route>\n                    </Switch>\n\n                    <Switch>\n                        <Route path=\"/homebriding\">\n                            <CollectionForm collectionLegend={\"\"}>\n                                <HomebridingTable students={students} tableLegend={\"Homebriding 2020\"} />\n                            </CollectionForm>\n                        </Route>\n                    </Switch>\n\n                    <Switch>\n                        <Route path=\"/supporttickets\" >\n                            <h1>Coming soon!</h1>\n                        </Route>\n                    </Switch>\n\n                    <Switch>\n                        <Route path=\"/guides\" >\n                            <h1>Coming soon!</h1>\n                        </Route>\n                    </Switch>\n\n                    <Switch>\n                        <Route path=\"/procedures\" >\n                            <h1>Coming soon!</h1>\n                        </Route>\n                    </Switch>\n\n                </Router>\n\n\n\n\n            </div >\n        )\n    }\n}\n\nexport default AdminView"]},"metadata":{},"sourceType":"module"}