{"ast":null,"code":"var _jsxFileName = \"/Users/jaylowe/Projects/Orion/orion_web_tools_demo/React Frontend/src/components/ParentClient.js\";\nimport React from 'react';\nimport LoginMenu from './LoginMenu.js';\nimport ParentView from \"./ParentView.js\";\nimport CollectionForm from './CollectionForm.js'; // React libraries\n\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\"; //// **** INITIALIZATIONS **** ////\n// sets up the uniqid hashing function for use with component id's\n\nvar uniqid = require('uniqid'); // TODO: add a link to the 'home' route from here so that\n// users land on / and can't leave in the form of a conditional\n// rendering function (call ParentView on success with StudentID passed in)\n// goal: parents start in login menu, upon success something allows them into the\n// parent view with the StudentID as a prop\n\n\nclass ParentClient extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      condition: \"\",\n      loginState: \"\",\n      parent: false,\n      admin: false\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      loginState: React.createElement(CollectionForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(LoginMenu, {\n        callbackButton: () => this.authCheck(),\n        callbackOnChange: event => this.updateLoginState(event),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }))\n    });\n  } // updates the state on keystroke change\n\n\n  updateLoginState(event) {\n    this.setState({\n      condition: event.target.value\n    });\n  } // TODO: update the fetch to search for a parent username and password!\n\n\n  authCheck() {\n    fetch('/parents', {\n      method: 'POST',\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      }),\n      body: JSON.stringify({\n        username: this.state.condition\n      })\n    }).then(res => res.json()).then(parent => {\n      if (parent != false) {\n        this.setState({\n          parent\n        });\n      }\n    }).then(() => this.conditionalCheck());\n    fetch('/admin', {\n      method: 'POST',\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      }),\n      body: JSON.stringify({\n        username: this.state.condition\n      })\n    }).then(res => res.json()).then(admin => {\n      if (admin != false) {\n        this.setState({\n          admin\n        });\n      }\n    }).then(() => this.conditionalCheck());\n  } // performs auth check\n\n\n  conditionalCheck() {\n    //console.log(this.state)\n    // TODO: instead of using false here, make a prop in parent called userType and have it = parent\n    if (this.state.parent != false) {\n      this.setState({\n        loginState: React.createElement(ParentView, {\n          studentId: this.state.parent.student,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        })\n      });\n    } else {\n      alert(this.state.condition + \" is not a registered username!\");\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, this.state.loginState))));\n  }\n\n}\n\nexport default ParentClient;","map":{"version":3,"sources":["/Users/jaylowe/Projects/Orion/orion_web_tools_demo/React Frontend/src/components/ParentClient.js"],"names":["React","LoginMenu","ParentView","CollectionForm","BrowserRouter","Router","Switch","Route","Link","uniqid","require","ParentClient","Component","state","condition","loginState","parent","admin","componentDidMount","setState","authCheck","event","updateLoginState","target","value","fetch","method","headers","Headers","body","JSON","stringify","username","then","res","json","conditionalCheck","student","alert","render"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport LoginMenu from './LoginMenu.js';\nimport ParentView from \"./ParentView.js\";\n\nimport CollectionForm from './CollectionForm.js'\n\n// React libraries\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\n\n//// **** INITIALIZATIONS **** ////\n// sets up the uniqid hashing function for use with component id's\nvar uniqid = require('uniqid');\n\n\n// TODO: add a link to the 'home' route from here so that\n// users land on / and can't leave in the form of a conditional\n// rendering function (call ParentView on success with StudentID passed in)\n\n// goal: parents start in login menu, upon success something allows them into the\n// parent view with the StudentID as a prop\n\nclass ParentClient extends React.Component {\n    state = { condition: \"\", loginState: \"\", parent: false, admin: false }\n\n    componentDidMount() {\n        this.setState({\n            loginState:\n                <CollectionForm >\n                    <LoginMenu\n                        callbackButton={() => this.authCheck()}\n                        callbackOnChange={(event) => this.updateLoginState(event)}\n                    />\n                </CollectionForm>\n        })\n    }\n\n    // updates the state on keystroke change\n    updateLoginState(event) {\n        this.setState({ condition: event.target.value })\n    }\n\n    // TODO: update the fetch to search for a parent username and password!\n    authCheck() {\n        fetch('/parents', {\n            method: 'POST',\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n            body: JSON.stringify({ username: this.state.condition })\n        })\n            .then(res => res.json())\n            .then(parent => {\n                if (parent != false) {\n                    this.setState({ parent })\n                }\n            })\n            .then(() => this.conditionalCheck())\n\n        fetch('/admin', {\n            method: 'POST',\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n            body: JSON.stringify({ username: this.state.condition })\n        })\n            .then(res => res.json())\n            .then(admin => {\n                if (admin != false) {\n                    this.setState({ admin })\n                }\n            })\n            .then(() => this.conditionalCheck())\n    }\n\n    // performs auth check\n    conditionalCheck() {\n        //console.log(this.state)\n        // TODO: instead of using false here, make a prop in parent called userType and have it = parent\n        if (this.state.parent != false) {\n            this.setState({ loginState: <ParentView studentId={this.state.parent.student} /> })\n        } else {\n            alert(this.state.condition + \" is not a registered username!\")\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Router>\n                    <Switch>\n                        <Route path=\"/\" >\n                            {this.state.loginState}\n                        </Route>\n                    </Switch>\n                </Router>\n            </div >\n        )\n    }\n}\n\nexport default ParentClient"]},"metadata":{},"sourceType":"module"}