{"ast":null,"code":"var _jsxFileName = \"/Users/jaylowe/Projects/Orion/orion_web_tools_demo/React Frontend/src/ParentClient.js\";\nimport React from 'react';\nimport LoginMenu from './components/LoginMenu.js';\nimport ParentView from \"./components/ParentView.js\"; // React libraries\n\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\"; //// **** INITIALIZATIONS **** ////\n// sets up the uniqid hashing function for use with component id's\n\nvar uniqid = require('uniqid'); // TODO: add a link to the 'home' route from here so that\n// users land on / and can't leave in the form of a conditional\n// rendering function (call ParentView on success with StudentID passed in)\n// goal: parents start in login menu, upon success something allows them into the\n// parent view with the StudentID as a prop\n\n\nclass ParentClient extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      condition: \"\",\n      loginState: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      loginState: React.createElement(LoginMenu, {\n        callbackButton: () => this.conditionalCheck(),\n        callbackOnChange: event => this.updateLoginState(event),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      })\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.condition != this.state.condition) {\n      console.log(this.state.condition);\n      this.conditionalCheck();\n    }\n  } // updates the state on keystroke change\n\n\n  updateLoginState(event) {\n    // TODO: figure out why state is one letter behind!\n    this.setState({\n      condition: event.target.value\n    });\n  } // performs auth check\n\n\n  conditionalCheck() {\n    fetch('/parents', {\n      method: 'POST',\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      }),\n      body: JSON.stringify({\n        fname: \"ill\"\n      })\n    }).then(res => res.json()).then(parents => console.log(parents));\n\n    if (this.state.condition == \"admi\") {\n      this.state.loginState = React.createElement(ParentView, {\n        studentID: \"5e8e39d60bc7d2a215cc28c7\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      });\n    } // TODO: if parent exists in DB, proceed to parent view, else stop\n\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, this.state.loginState))));\n  }\n\n}\n\nexport default ParentClient;","map":{"version":3,"sources":["/Users/jaylowe/Projects/Orion/orion_web_tools_demo/React Frontend/src/ParentClient.js"],"names":["React","LoginMenu","ParentView","BrowserRouter","Router","Switch","Route","Link","uniqid","require","ParentClient","Component","state","condition","loginState","componentDidMount","setState","conditionalCheck","event","updateLoginState","componentDidUpdate","prevProps","prevState","console","log","target","value","fetch","method","headers","Headers","body","JSON","stringify","fname","then","res","json","parents","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,UAAP,MAAuB,4BAAvB,C,CAEA;;AACA,SACIC,aAAa,IAAIC,MADrB,EAEIC,MAFJ,EAGIC,KAHJ,EAIIC,IAJJ,QAKO,kBALP,C,CAOA;AACA;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAApB,C,CAGA;AACA;AACA;AAEA;AACA;;;AAEA,MAAMC,YAAN,SAA2BV,KAAK,CAACW,SAAjC,CAA2C;AAAA;AAAA;AAAA,SACvCC,KADuC,GAC/B;AAAEC,MAAAA,SAAS,EAAE,EAAb;AAAiBC,MAAAA,UAAU,EAAE;AAA7B,KAD+B;AAAA;;AAGvCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,QAAL,CAAc;AACVF,MAAAA,UAAU,EACN,oBAAC,SAAD;AACI,QAAA,cAAc,EAAE,MAAM,KAAKG,gBAAL,EAD1B;AAEI,QAAA,gBAAgB,EAAGC,KAAD,IAAW,KAAKC,gBAAL,CAAsBD,KAAtB,CAFjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFM,KAAd;AAQH;;AAEDE,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACrC,QAAIA,SAAS,CAACT,SAAV,IAAuB,KAAKD,KAAL,CAAWC,SAAtC,EAAiD;AAC7CU,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAL,CAAWC,SAAvB;AACA,WAAKI,gBAAL;AACH;AACJ,GAnBsC,CAqBvC;;;AACAE,EAAAA,gBAAgB,CAACD,KAAD,EAAQ;AACpB;AACA,SAAKF,QAAL,CAAc;AAAEH,MAAAA,SAAS,EAAEK,KAAK,CAACO,MAAN,CAAaC;AAA1B,KAAd;AACH,GAzBsC,CA2BvC;;;AACAT,EAAAA,gBAAgB,GAAG;AACfU,IAAAA,KAAK,CAAC,UAAD,EAAa;AACdC,MAAAA,MAAM,EAAE,MADM;AAEdC,MAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AAAE,wBAAgB;AAAlB,OAAZ,CAFK;AAGdC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAf;AAHQ,KAAb,CAAL,CAKKC,IALL,CAKUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EALjB,EAMKF,IANL,CAMUG,OAAO,IAAIf,OAAO,CAACC,GAAR,CAAYc,OAAZ,CANrB;;AAQA,QAAI,KAAK1B,KAAL,CAAWC,SAAX,IAAwB,MAA5B,EAAoC;AAChC,WAAKD,KAAL,CAAWE,UAAX,GAAwB,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAC,0BAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAxB;AACH,KAXc,CAYf;;AAEH;;AAEDyB,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAK3B,KAAL,CAAWE,UADhB,CADJ,CADJ,CADJ,CADJ;AAWH;;AAxDsC;;AA2D3C,eAAeJ,YAAf","sourcesContent":["import React from 'react'\n\nimport LoginMenu from './components/LoginMenu.js';\nimport ParentView from \"./components/ParentView.js\";\n\n// React libraries\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\n\n//// **** INITIALIZATIONS **** ////\n// sets up the uniqid hashing function for use with component id's\nvar uniqid = require('uniqid');\n\n\n// TODO: add a link to the 'home' route from here so that\n// users land on / and can't leave in the form of a conditional\n// rendering function (call ParentView on success with StudentID passed in)\n\n// goal: parents start in login menu, upon success something allows them into the\n// parent view with the StudentID as a prop\n\nclass ParentClient extends React.Component {\n    state = { condition: \"\", loginState: \"\" }\n\n    componentDidMount() {\n        this.setState({\n            loginState:\n                <LoginMenu\n                    callbackButton={() => this.conditionalCheck()}\n                    callbackOnChange={(event) => this.updateLoginState(event)}\n                />\n        })\n\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.condition != this.state.condition) {\n            console.log(this.state.condition)\n            this.conditionalCheck()\n        }\n    }\n\n    // updates the state on keystroke change\n    updateLoginState(event) {\n        // TODO: figure out why state is one letter behind!\n        this.setState({ condition: event.target.value })\n    }\n\n    // performs auth check\n    conditionalCheck() {\n        fetch('/parents', {\n            method: 'POST',\n            headers: new Headers({ 'Content-Type': 'application/json'}),\n            body: JSON.stringify({ fname: \"ill\"})\n        })\n            .then(res => res.json())\n            .then(parents => console.log(parents))\n\n        if (this.state.condition == \"admi\") {\n            this.state.loginState = <ParentView studentID=\"5e8e39d60bc7d2a215cc28c7\" />\n        }\n        // TODO: if parent exists in DB, proceed to parent view, else stop\n\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Router>\n                    <Switch>\n                        <Route path=\"/\" >\n                            {this.state.loginState}\n                        </Route>\n                    </Switch>\n                </Router>\n            </div >\n        )\n    }\n}\n\nexport default ParentClient"]},"metadata":{},"sourceType":"module"}