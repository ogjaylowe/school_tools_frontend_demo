{"ast":null,"code":"var _jsxFileName = \"/Users/jaylowe/Projects/orion_web_tools_demo/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { render } from \"react-dom\"; // Import react-circular-progressbar module and styles\n\nimport { CircularProgressbar, CircularProgressbarWithChildren, buildStyles } from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\"; // Animation\n\nimport { easeQuadInOut } from \"d3-ease\";\nimport AnimatedProgressProvider from \"AnimatedProgressProvider\";\nimport ChangingProgressProvider from \"ChangingProgressProvider\"; // Radial separators\n\nimport RadialSeparators from \"./RadialSeparators\";\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}), document.querySelector('#root'));\nconst percentage = 66;\n\nconst App2 = () => React.createElement(\"div\", {\n  style: {\n    padding: \"40px 40px 40px 40px\"\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n}, React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}, \"react-circular-progressbar examples\"), React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}, React.createElement(\"a\", {\n  href: \"https://github.com/kevinsqi/react-circular-progressbar\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n}, React.createElement(\"strong\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}, \"View Github docs\"))), React.createElement(\"h2\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}, \"Common style customizations\"), React.createElement(Example, {\n  label: \"Default\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n}, React.createElement(CircularProgressbar, {\n  value: percentage,\n  text: `${percentage}%`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n})), React.createElement(Example, {\n  label: \"Stroke width\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n}, React.createElement(CircularProgressbar, {\n  value: percentage,\n  text: `${percentage}%`,\n  strokeWidth: 5,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n})), React.createElement(Example, {\n  label: \"Square linecaps\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50\n  },\n  __self: this\n}, React.createElement(CircularProgressbar, {\n  value: percentage,\n  text: `${percentage}%`,\n  styles: buildStyles({\n    strokeLinecap: \"butt\"\n  }),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51\n  },\n  __self: this\n})), React.createElement(Example, {\n  label: \"Custom colors\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59\n  },\n  __self: this\n}, React.createElement(CircularProgressbar, {\n  value: percentage,\n  text: `${percentage}%`,\n  styles: buildStyles({\n    textColor: \"red\",\n    pathColor: \"turquoise\",\n    trailColor: \"gold\"\n  }),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60\n  },\n  __self: this\n})), React.createElement(Example, {\n  label: \"Text size\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70\n  },\n  __self: this\n}, React.createElement(CircularProgressbar, {\n  value: percentage,\n  text: `${percentage}%`,\n  styles: buildStyles({\n    // This is in units relative to the 100x100px\n    // SVG viewbox.\n    textSize: \"14px\"\n  }),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71\n  },\n  __self: this\n})), React.createElement(Example, {\n  label: \"Rotation\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 81\n  },\n  __self: this\n}, React.createElement(CircularProgressbar, {\n  value: percentage,\n  text: `${percentage}%`,\n  styles: buildStyles({\n    rotation: 0.5 + (1 - percentage / 100) / 2\n  }),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 82\n  },\n  __self: this\n})), React.createElement(\"h2\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 91\n  },\n  __self: this\n}, \"Animation\"), React.createElement(Example, {\n  label: \"Default animation speed\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 92\n  },\n  __self: this\n}, React.createElement(ChangingProgressProvider, {\n  values: [0, 20, 40, 60, 80, 100],\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 93\n  },\n  __self: this\n}, percentage => React.createElement(CircularProgressbar, {\n  value: percentage,\n  text: `${percentage}%`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 95\n  },\n  __self: this\n}))), React.createElement(Example, {\n  label: \"Custom animation speed\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 99\n  },\n  __self: this\n}, React.createElement(ChangingProgressProvider, {\n  values: [0, 20, 40, 60, 80, 100],\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 100\n  },\n  __self: this\n}, percentage => React.createElement(CircularProgressbar, {\n  value: percentage,\n  text: `${percentage}%`,\n  styles: buildStyles({\n    pathTransitionDuration: 0.15\n  }),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 102\n  },\n  __self: this\n}))), React.createElement(Example, {\n  label: \"No animation when returning to 0\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 112\n  },\n  __self: this\n}, React.createElement(ChangingProgressProvider, {\n  values: [0, 100],\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 113\n  },\n  __self: this\n}, percentage => React.createElement(CircularProgressbar, {\n  value: percentage,\n  text: `${percentage}%`,\n  styles: buildStyles({\n    pathTransition: percentage === 0 ? \"none\" : \"stroke-dashoffset 0.5s ease 0s\"\n  }),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 115\n  },\n  __self: this\n}))), React.createElement(Example, {\n  label: \"Fully controlled text animation using react-move\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 126\n  },\n  __self: this\n}, React.createElement(AnimatedProgressProvider, {\n  valueStart: 0,\n  valueEnd: 66,\n  duration: 1.4,\n  easingFunction: easeQuadInOut,\n  repeat: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 127\n  },\n  __self: this\n}, value => {\n  const roundedValue = Math.round(value);\n  return React.createElement(CircularProgressbar, {\n    value: value,\n    text: `${roundedValue}%`\n    /* This is important to include, because if you're fully managing the\n    animation yourself, you'll want to disable the CSS animation. */\n    ,\n    styles: buildStyles({\n      pathTransition: \"none\"\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  });\n})), React.createElement(\"h2\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 149\n  },\n  __self: this\n}, \"Other use cases\"), React.createElement(Example, {\n  label: \"Arbitrary content\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 150\n  },\n  __self: this\n}, React.createElement(CircularProgressbarWithChildren, {\n  value: 66,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 151\n  },\n  __self: this\n}, React.createElement(\"img\", {\n  style: {\n    width: 40,\n    marginTop: -5\n  },\n  src: \"https://i.imgur.com/b9NyUGm.png\",\n  alt: \"doge\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 153\n  },\n  __self: this\n}), React.createElement(\"div\", {\n  style: {\n    fontSize: 12,\n    marginTop: -5\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 158\n  },\n  __self: this\n}, React.createElement(\"strong\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 159\n  },\n  __self: this\n}, \"66%\"), \" mate\"))), React.createElement(Example, {\n  label: \"Multiple overlapping paths\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 163\n  },\n  __self: this\n}, React.createElement(CircularProgressbarWithChildren, {\n  value: 80,\n  styles: buildStyles({\n    pathColor: \"#f00\",\n    trailColor: \"#eee\",\n    strokeLinecap: \"butt\"\n  }),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 164\n  },\n  __self: this\n}, React.createElement(CircularProgressbar, {\n  value: 70,\n  styles: buildStyles({\n    trailColor: \"transparent\",\n    strokeLinecap: \"butt\"\n  }),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 173\n  },\n  __self: this\n}))), React.createElement(Example, {\n  label: \"Multiple concentric paths\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 182\n  },\n  __self: this\n}, React.createElement(CircularProgressbarWithChildren, {\n  value: 75,\n  strokeWidth: 8,\n  styles: buildStyles({\n    pathColor: \"#f00\",\n    trailColor: \"transparent\"\n  }),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 183\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  style: {\n    width: \"84%\"\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 195\n  },\n  __self: this\n}, React.createElement(CircularProgressbar, {\n  value: 70,\n  styles: buildStyles({\n    trailColor: \"transparent\"\n  }),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 196\n  },\n  __self: this\n})))), React.createElement(Example, {\n  label: \"Background\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 205\n  },\n  __self: this\n}, React.createElement(CircularProgressbar, {\n  value: percentage,\n  text: `${percentage}%`,\n  background: true,\n  backgroundPadding: 6,\n  styles: buildStyles({\n    backgroundColor: \"#3e98c7\",\n    textColor: \"#fff\",\n    pathColor: \"#fff\",\n    trailColor: \"transparent\"\n  }),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 206\n  },\n  __self: this\n})), React.createElement(Example, {\n  label: \"Counterclockwise\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 219\n  },\n  __self: this\n}, React.createElement(CircularProgressbar, {\n  value: percentage,\n  text: `${percentage}%`,\n  counterClockwise: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 220\n  },\n  __self: this\n})), React.createElement(Example, {\n  label: \"Pie chart\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 227\n  },\n  __self: this\n}, React.createElement(CircularProgressbar, {\n  value: percentage,\n  strokeWidth: 50,\n  styles: buildStyles({\n    strokeLinecap: \"butt\"\n  }),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 228\n  },\n  __self: this\n})), React.createElement(Example, {\n  label: \"Progressbar with separators\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 236\n  },\n  __self: this\n}, React.createElement(CircularProgressbarWithChildren, {\n  value: 80,\n  text: `${80}%`,\n  strokeWidth: 10,\n  styles: buildStyles({\n    strokeLinecap: \"butt\"\n  }),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 237\n  },\n  __self: this\n}, React.createElement(RadialSeparators, {\n  count: 12,\n  style: {\n    background: \"#fff\",\n    width: \"2px\",\n    // This needs to be equal to props.strokeWidth\n    height: `${10}%`\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 245\n  },\n  __self: this\n}))), React.createElement(Example, {\n  label: \"Dashboard/speedometer\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 256\n  },\n  __self: this\n}, React.createElement(ChangingProgressProvider, {\n  values: [0, 20, 80],\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 257\n  },\n  __self: this\n}, value => React.createElement(CircularProgressbar, {\n  value: value,\n  text: `${value}%`,\n  circleRatio: 0.75,\n  styles: buildStyles({\n    rotation: 1 / 2 + 1 / 8,\n    strokeLinecap: \"butt\",\n    trailColor: \"#eee\"\n  }),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 259\n  },\n  __self: this\n}))));\n\nfunction Example(props) {\n  return React.createElement(\"div\", {\n    style: {\n      marginBottom: 80\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277\n    },\n    __self: this\n  }, React.createElement(\"hr\", {\n    style: {\n      border: \"2px solid #ddd\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      marginTop: 30,\n      display: \"flex\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      width: \"30%\",\n      paddingRight: 30\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280\n    },\n    __self: this\n  }, props.children), React.createElement(\"div\", {\n    style: {\n      width: \"70%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282\n    },\n    __self: this\n  }, props.label), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283\n    },\n    __self: this\n  }, props.description))));\n}\n\nrender(React.createElement(App2, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 290\n  },\n  __self: this\n}), document.getElementById(\"circles\"));","map":{"version":3,"sources":["/Users/jaylowe/Projects/orion_web_tools_demo/src/index.js"],"names":["React","ReactDOM","App","render","CircularProgressbar","CircularProgressbarWithChildren","buildStyles","easeQuadInOut","AnimatedProgressProvider","ChangingProgressProvider","RadialSeparators","document","querySelector","percentage","App2","padding","strokeLinecap","textColor","pathColor","trailColor","textSize","rotation","pathTransitionDuration","pathTransition","value","roundedValue","Math","round","width","marginTop","fontSize","backgroundColor","background","height","Example","props","marginBottom","border","display","paddingRight","children","label","description","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport { render } from \"react-dom\";\n\n// Import react-circular-progressbar module and styles\nimport {\n  CircularProgressbar,\n  CircularProgressbarWithChildren,\n  buildStyles\n} from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\";\n\n// Animation\nimport { easeQuadInOut } from \"d3-ease\";\nimport AnimatedProgressProvider from \"AnimatedProgressProvider\";\nimport ChangingProgressProvider from \"ChangingProgressProvider\";\n\n// Radial separators\nimport RadialSeparators from \"./RadialSeparators\";\n\nReactDOM.render(<App />, document.querySelector('#root'));\n\n\n\nconst percentage = 66;\n\nconst App2 = () => (\n  <div style={{ padding: \"40px 40px 40px 40px\" }}>\n    <h1>react-circular-progressbar examples</h1>\n    <p>\n      <a href=\"https://github.com/kevinsqi/react-circular-progressbar\">\n        <strong>View Github docs</strong>\n      </a>\n    </p>\n\n    <h2>Common style customizations</h2>\n    <Example label=\"Default\">\n      <CircularProgressbar value={percentage} text={`${percentage}%`} />\n    </Example>\n    <Example label=\"Stroke width\">\n      <CircularProgressbar\n        value={percentage}\n        text={`${percentage}%`}\n        strokeWidth={5}\n      />\n    </Example>\n    <Example label=\"Square linecaps\">\n      <CircularProgressbar\n        value={percentage}\n        text={`${percentage}%`}\n        styles={buildStyles({\n          strokeLinecap: \"butt\"\n        })}\n      />\n    </Example>\n    <Example label=\"Custom colors\">\n      <CircularProgressbar\n        value={percentage}\n        text={`${percentage}%`}\n        styles={buildStyles({\n          textColor: \"red\",\n          pathColor: \"turquoise\",\n          trailColor: \"gold\"\n        })}\n      />\n    </Example>\n    <Example label=\"Text size\">\n      <CircularProgressbar\n        value={percentage}\n        text={`${percentage}%`}\n        styles={buildStyles({\n          // This is in units relative to the 100x100px\n          // SVG viewbox.\n          textSize: \"14px\"\n        })}\n      />\n    </Example>\n    <Example label=\"Rotation\">\n      <CircularProgressbar\n        value={percentage}\n        text={`${percentage}%`}\n        styles={buildStyles({\n          rotation: 0.5 + (1 - percentage / 100) / 2\n        })}\n      />\n    </Example>\n\n    <h2>Animation</h2>\n    <Example label=\"Default animation speed\">\n      <ChangingProgressProvider values={[0, 20, 40, 60, 80, 100]}>\n        {percentage => (\n          <CircularProgressbar value={percentage} text={`${percentage}%`} />\n        )}\n      </ChangingProgressProvider>\n    </Example>\n    <Example label=\"Custom animation speed\">\n      <ChangingProgressProvider values={[0, 20, 40, 60, 80, 100]}>\n        {percentage => (\n          <CircularProgressbar\n            value={percentage}\n            text={`${percentage}%`}\n            styles={buildStyles({\n              pathTransitionDuration: 0.15\n            })}\n          />\n        )}\n      </ChangingProgressProvider>\n    </Example>\n    <Example label=\"No animation when returning to 0\">\n      <ChangingProgressProvider values={[0, 100]}>\n        {percentage => (\n          <CircularProgressbar\n            value={percentage}\n            text={`${percentage}%`}\n            styles={buildStyles({\n              pathTransition:\n                percentage === 0 ? \"none\" : \"stroke-dashoffset 0.5s ease 0s\"\n            })}\n          />\n        )}\n      </ChangingProgressProvider>\n    </Example>\n    <Example label=\"Fully controlled text animation using react-move\">\n      <AnimatedProgressProvider\n        valueStart={0}\n        valueEnd={66}\n        duration={1.4}\n        easingFunction={easeQuadInOut}\n        repeat\n      >\n        {value => {\n          const roundedValue = Math.round(value);\n          return (\n            <CircularProgressbar\n              value={value}\n              text={`${roundedValue}%`}\n              /* This is important to include, because if you're fully managing the\n        animation yourself, you'll want to disable the CSS animation. */\n              styles={buildStyles({ pathTransition: \"none\" })}\n            />\n          );\n        }}\n      </AnimatedProgressProvider>\n    </Example>\n\n    <h2>Other use cases</h2>\n    <Example label=\"Arbitrary content\">\n      <CircularProgressbarWithChildren value={66}>\n        {/* Put any JSX content in here that you'd like. It'll be vertically and horizonally centered. */}\n        <img\n          style={{ width: 40, marginTop: -5 }}\n          src=\"https://i.imgur.com/b9NyUGm.png\"\n          alt=\"doge\"\n        />\n        <div style={{ fontSize: 12, marginTop: -5 }}>\n          <strong>66%</strong> mate\n        </div>\n      </CircularProgressbarWithChildren>\n    </Example>\n    <Example label=\"Multiple overlapping paths\">\n      <CircularProgressbarWithChildren\n        value={80}\n        styles={buildStyles({\n          pathColor: \"#f00\",\n          trailColor: \"#eee\",\n          strokeLinecap: \"butt\"\n        })}\n      >\n        {/* Foreground path */}\n        <CircularProgressbar\n          value={70}\n          styles={buildStyles({\n            trailColor: \"transparent\",\n            strokeLinecap: \"butt\"\n          })}\n        />\n      </CircularProgressbarWithChildren>\n    </Example>\n    <Example label=\"Multiple concentric paths\">\n      <CircularProgressbarWithChildren\n        value={75}\n        strokeWidth={8}\n        styles={buildStyles({\n          pathColor: \"#f00\",\n          trailColor: \"transparent\"\n        })}\n      >\n        {/*\n          Width here needs to be (100 - 2 * strokeWidth)% \n          in order to fit exactly inside the outer progressbar.\n        */}\n        <div style={{ width: \"84%\" }}>\n          <CircularProgressbar\n            value={70}\n            styles={buildStyles({\n              trailColor: \"transparent\"\n            })}\n          />\n        </div>\n      </CircularProgressbarWithChildren>\n    </Example>\n    <Example label=\"Background\">\n      <CircularProgressbar\n        value={percentage}\n        text={`${percentage}%`}\n        background\n        backgroundPadding={6}\n        styles={buildStyles({\n          backgroundColor: \"#3e98c7\",\n          textColor: \"#fff\",\n          pathColor: \"#fff\",\n          trailColor: \"transparent\"\n        })}\n      />\n    </Example>\n    <Example label=\"Counterclockwise\">\n      <CircularProgressbar\n        value={percentage}\n        text={`${percentage}%`}\n        counterClockwise\n      />\n    </Example>\n\n    <Example label=\"Pie chart\">\n      <CircularProgressbar\n        value={percentage}\n        strokeWidth={50}\n        styles={buildStyles({\n          strokeLinecap: \"butt\"\n        })}\n      />\n    </Example>\n    <Example label=\"Progressbar with separators\">\n      <CircularProgressbarWithChildren\n        value={80}\n        text={`${80}%`}\n        strokeWidth={10}\n        styles={buildStyles({\n          strokeLinecap: \"butt\"\n        })}\n      >\n        <RadialSeparators\n          count={12}\n          style={{\n            background: \"#fff\",\n            width: \"2px\",\n            // This needs to be equal to props.strokeWidth\n            height: `${10}%`\n          }}\n        />\n      </CircularProgressbarWithChildren>\n    </Example>\n    <Example label=\"Dashboard/speedometer\">\n      <ChangingProgressProvider values={[0, 20, 80]}>\n        {value => (\n          <CircularProgressbar\n            value={value}\n            text={`${value}%`}\n            circleRatio={0.75}\n            styles={buildStyles({\n              rotation: 1 / 2 + 1 / 8,\n              strokeLinecap: \"butt\",\n              trailColor: \"#eee\"\n            })}\n          />\n        )}\n      </ChangingProgressProvider>\n    </Example>\n  </div>\n);\n\nfunction Example(props) {\n  return (\n    <div style={{ marginBottom: 80 }}>\n      <hr style={{ border: \"2px solid #ddd\" }} />\n      <div style={{ marginTop: 30, display: \"flex\" }}>\n        <div style={{ width: \"30%\", paddingRight: 30 }}>{props.children}</div>\n        <div style={{ width: \"70%\" }}>\n          <h3 className=\"h5\">{props.label}</h3>\n          <p>{props.description}</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nrender(<App2 />, document.getElementById(\"circles\"));\n"]},"metadata":{},"sourceType":"module"}